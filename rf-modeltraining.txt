{"cells":[{"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\nimport os \nfrom sklearn.ensemble import RandomForestClassifier, RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nimport pandas as pd\nimport math\nimport pickle \nimport os\nimport time\nfrom pandas import DataFrame\nfrom sklearn.model_selection import cross_val_predict\n","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"Loading testing  labels. \nand Testing File names."},{"metadata":{"trusted":true},"cell_type":"code","source":"with open(\"../input/ml-project/labels.txt\", \"rb\") as fp:   # Unpickling\n   labels = pickle.load(fp)\nwith open(\"../input/ml-project/test_labels.txt\", \"rb\") as fp:   # Unpickling\n   test_labels = pickle.load(fp)\n","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"Loading training data."},{"metadata":{"trusted":true},"cell_type":"code","source":"with open(\"../input/ml-project/Sensor1.txt\", \"rb\") as fp:   # Unpickling\n   sensor1 = pickle.load(fp)\nwith open(\"../input/ml-project/sensor2.txt\", \"rb\") as fp:   # Unpickling\n   sensor2 = pickle.load(fp)\nwith open(\"../input/ml-project/sensor3.txt\", \"rb\") as fp:   # Unpickling\n   sensor3 = pickle.load(fp)\nwith open(\"../input/ml-project/sensor4.txt\", \"rb\") as fp:   # Unpickling\n   sensor4 = pickle.load(fp)\nwith open(\"../input/ml-project/sensor5.txt\", \"rb\") as fp:   # Unpickling\n   sensor5 = pickle.load(fp)\nwith open(\"../input/ml-project/sensor6.txt\", \"rb\") as fp:   # Unpickling\n   sensor6 = pickle.load(fp)\nwith open(\"../input/ml-project/sensor7.txt\", \"rb\") as fp:   # Unpickling\n   sensor7 = pickle.load(fp)\nwith open(\"../input/ml-project/sensor8.txt\", \"rb\") as fp:   # Unpickling\n   sensor8 = pickle.load(fp)\nwith open(\"../input/ml-project/sensor9.txt\", \"rb\") as fp:   # Unpickling\n   sensor9 = pickle.load(fp)\nwith open(\"../input/ml-project/sensor10.txt\", \"rb\") as fp:   # Unpickling\n   sensor10 = pickle.load(fp)\n","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"Loading testing data."},{"metadata":{"trusted":true},"cell_type":"code","source":"with open(\"../input/ml-project/test_sensor1.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor1 = pickle.load(fp)\nwith open(\"../input/ml-project/test_sensor2.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor2 = pickle.load(fp)\nwith open(\"../input/ml-project/test_sensor3.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor3 = pickle.load(fp)\nwith open(\"../input/ml-project/test_sensor4.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor4 = pickle.load(fp)\nwith open(\"../input/ml-project/test_sensor5.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor5 = pickle.load(fp)\nwith open(\"../input/ml-project/test_sensor6.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor6 = pickle.load(fp)\nwith open(\"../input/ml-project/test_sensor7.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor7 = pickle.load(fp)\nwith open(\"../input/ml-project/test_sensor8.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor8 = pickle.load(fp)\nwith open(\"../input/ml-project/test_sensor9.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor9 = pickle.load(fp)\nwith open(\"../input/ml-project/test_sensor10.txt\", \"rb\") as fp:   # Unpickling\n   test_sensor10 = pickle.load(fp)\n","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"Concatenating training sensors.  "},{"metadata":{"trusted":true},"cell_type":"code","source":"All_Sensors=[[0]*1000]*4431\nsize=50\nfor i in range (len(sensor1)): \n    x=(list(sensor1[i][:size])\n      +list(sensor2[i][:size])\n      +list(sensor3[i][:size])\n      +list(sensor4[i][:size])\n      +list(sensor5[i][:size])\n      +list(sensor6[i][:size])\n      +list(sensor7[i][:size])\n      +list(sensor8[i][:size])\n      +list(sensor9[i][:size])\n      +list(sensor10[i][:size]))\n    All_Sensors[i]=(x)\n\n    ","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"Concatenating testing sensors.  "},{"metadata":{},"cell_type":"markdown","source":""},{"metadata":{"trusted":true},"cell_type":"code","source":"All_Test_Sensors=[[0]*1000]*4520\nfor i in range (len(test_sensor1)): \n    x=(list(test_sensor1[i][:size])\n      +list(test_sensor2[i][:size])\n      +list(test_sensor3[i][:size])\n      +list(test_sensor4[i][:size])\n      +list(test_sensor5[i][:size])\n      +list(test_sensor6[i][:size])\n      +list(test_sensor7[i][:size])\n      +list(test_sensor8[i][:size])\n      +list(test_sensor9[i][:size])\n      +list(test_sensor10[i][:size]))\n    All_Test_Sensors[i]=(x)\n\n    ","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"dealing with NaN data."},{"metadata":{"trusted":true},"cell_type":"code","source":"for i in range (len(All_Sensors)):\n  (All_Sensors[i]) = [0 if math.isnan(x) else x for x in (All_Sensors[i])]","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"for i in range (len(All_Test_Sensors)):\n  (All_Test_Sensors[i]) = [0 if math.isnan(x) else x for x in (All_Test_Sensors[i])]","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"In case testing test data."},{"metadata":{"trusted":true},"cell_type":"code","source":"#  x_train, x_test, y_train = All_Sensors, All_Test_Sensors,labels\n","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"In case testing train model and testing from parttial training data."},{"metadata":{"trusted":true},"cell_type":"code","source":"x_train, x_test, y_train, y_test = train_test_split(All_Sensors, labels, test_size=0.2,random_state=42)","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"Validation and Testing\n"},{"metadata":{"trusted":true},"cell_type":"code","source":"# x_valid, x_test, y_valid, y_test = train_test_split(x_test, y_test, test_size=0.25, random_state=42)","execution_count":82,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"start = time.time()\nrfr = RandomForestRegressor(n_estimators=100)\nrfr.fit(x_train, y_train)\nscore = rfr.score(x_test, y_test)\ny_pred_RF = rfr.predict(x_test)\nerror = mean_absolute_error(y_test, y_pred_RF)\nend = time.time()\nprint('Scores =', scores)\nelapsed = (end - start) // 60, ((end - start) % 60)//1\nprint('Training Time', elapsed)\nprint('Accuray= ',score)\nprint('Mean Square Error= ',error)\n","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"Save output"},{"metadata":{"trusted":true},"cell_type":"code","source":"()\nwith open(\"output.txt\", \"wb\") as fp:   #Pickling\n   pickle.dump(y_pred_RF, fp)","execution_count":92,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"Ploting"},{"metadata":{"trusted":true},"cell_type":"code","source":"x = np.linspace(0,50*10**6)\nplt.figure(figsize=(14,11))\nplt.plot(x,x,'b',linestyle='-',label='Perfect')\nplt.plot(y_test,y_pred_RF,'r',linestyle='',marker='o',label='Random Forest Model')\nplt.ylabel('Observer Time-to-eruption',fontsize=18)\nplt.xlabel('Predicted Time-to-eruption',fontsize=18)\nplt.title('Random Forest Model Testing',fontsize=18)\nplt.legend(fontsize=15,loc='upper right')\nplt.show()\n","execution_count":98,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1008x792 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"metadata":{},"cell_type":"markdown","source":"In case organising testing output."},{"metadata":{"trusted":true},"cell_type":"code","source":"len(y_pred_RF)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"pred=list(y_pred_RF)\npred_y=[]\nfor i in range(len(test_labels)): \n    print(len(pred_y))\n    for j in range (len(keys)): \n        if test_labels[i]==str(keys[j]):\n            pred_y.append(pred[i])\n            print(len(pred_y))\n            break","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"pred_y","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"df = pd.read_csv('../input/predict-volcanic-eruptions-ingv-oe/sample_submission.csv', index_col=None, header=0)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"keys=np.array(df['segment_id'])\nk=DataFrame (keys,columns=['segment_id'])","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"t= DataFrame (pred_y,columns=['time_to_eruption'])","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"t","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"frame = [keys,t]","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"concatenated_dataframes = pd.concat(\n    [\n        k.reset_index(drop=True),\n        t.reset_index(drop=True),\n       \n    ],\n    axis=1,\n    ignore_index=True,\n)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"concatenated_dataframes.to_csv(r'Subb.csv', index = False)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.7.9","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat":4,"nbformat_minor":4}